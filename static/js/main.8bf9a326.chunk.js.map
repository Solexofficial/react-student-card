{"version":3,"sources":["app/utils/storage.js","app/components/textField.jsx","app/components/modal.jsx","app/layouts/form.jsx","app/utils/validator.js","app/utils/getAge.js","app/components/studentCard.jsx","app/layouts/main.jsx","app/App.js","index.js"],"names":["getStorageData","key","JSON","parse","localStorage","getItem","TextField","label","type","placeholder","name","value","onChange","error","rest","className","htmlFor","id","defaultProps","Modal","visible","onShow","console","log","style","width","minHeight","position","background","zIndex","display","tabIndex","role","onClick","Form","history","useHistory","useState","firstName","secondName","birthYear","portfolioUrl","data","setData","errors","setErrors","showModal","setShowModal","validate","config","validateMethod","statusValidate","String","trim","test","Date","getFullYear","message","fieldName","validator","validatorConfig","Object","keys","length","isValid","isRequired","isValidYear","isUrl","useEffect","handleGoHome","replace","handleSetStorage","setItem","stringify","handleChange","target","prevState","flexDirection","justifyContent","min","max","e","preventDefault","disabled","getAge","age","declensions","n1","Math","abs","formatAgeDeclensions","StudentCard","student","marginBottom","href","rel","Main","to","App","height","alignItems","path","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8bf9a326.chunk.js","sourcesContent":["export function getStorageData(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nexport function setStorageData(key, value) {\r\n  return localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error, ...rest }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className='mb-4'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className='input-group has-validation'>\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          type={type}\r\n          className={getInputClasses()}\r\n          {...rest}\r\n        />\r\n        {error && <div className='invalid-feedback'>{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\n\r\nconst Modal = ({ visible, onShow }) => {\r\n  console.log(visible);\r\n  return (\r\n    visible && (\r\n      <div\r\n        className='modal-overlay'\r\n        style={{\r\n          width: '100vw',\r\n          minHeight: '100vh',\r\n          position: 'absolute',\r\n          background: 'rgba(0, 0, 0, 0.8)',\r\n          zIndex: 2,\r\n        }}\r\n      >\r\n        <div className={`modal ${visible ? 'show' : ''}`} style={{ display: 'block' }} tabIndex='-1' role='dialog'>\r\n          <div className='modal-dialog' role='document'>\r\n            <div className='modal-content'>\r\n              <div className='modal-header'>\r\n                <h5 className='modal-title'>Карточка студента</h5>\r\n                <button type='button' className='close' data-dismiss='modal' aria-label='Close' onClick={onShow}>\r\n                  <span aria-hidden='true'>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className='modal-body'>\r\n                <p>Данные обновлены!</p>\r\n              </div>\r\n              <div className='modal-footer'>\r\n                <button type='button' className='btn btn-primary' data-dismiss='modal' onClick={onShow}>\r\n                  Закрыть\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { getStorageData, setStorageData } from '../utils/storage';\r\nimport TextField from '../components/textField';\r\nimport Modal from '../components/modal';\r\nimport validator from '../utils/validator';\r\n\r\nconst Form = () => {\r\n  const history = useHistory();\r\n  const initialState = { firstName: '', secondName: '', birthYear: '', portfolioUrl: '' };\r\n  const [data, setData] = useState(getStorageData('student') || initialState);\r\n  const [errors, setErrors] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    firstName: {\r\n      isRequired: { message: 'Имя обязательно для заполнения' },\r\n    },\r\n    secondName: {\r\n      isRequired: { message: 'Фамилия обязательно для заполнения' },\r\n    },\r\n    birthYear: {\r\n      isRequired: { message: 'Год рождения обязательно для заполнения' },\r\n      isValidYear: { message: 'Поле \"Год Рождения\" не корректно' },\r\n    },\r\n    portfolioUrl: {\r\n      isRequired: { message: 'Портфолио обязательно для заполнения' },\r\n      isUrl: { message: 'Поле портфолио должно быть ссылкой' },\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleGoHome = () => {\r\n    history.replace('/');\r\n  };\r\n\r\n  const handleSetStorage = data => {\r\n    setStorageData('student', data);\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    setData(prevState => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleSetStorage(data);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleToggleShowModal = () => {\r\n    setShowModal(prevState => !prevState);\r\n    handleGoHome();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal visible={showModal} onShow={handleToggleShowModal} />\r\n      <div\r\n        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '30%', minHeight: '100%' }}\r\n      >\r\n        <h1>{getStorageData('student') ? 'Редактировать' : 'Создать'}</h1>\r\n        <form style={{ minHeight: 500 }}>\r\n          <TextField\r\n            label='Имя'\r\n            value={data.firstName}\r\n            placeholder='Введите ваше имя'\r\n            name='firstName'\r\n            onChange={handleChange}\r\n            error={errors.firstName}\r\n          />\r\n          <TextField\r\n            label='Фамилия'\r\n            value={data.secondName}\r\n            placeholder='Введите вашу фамилию'\r\n            name='secondName'\r\n            onChange={handleChange}\r\n            error={errors.secondName}\r\n          />\r\n          <TextField\r\n            label='Год Рождения'\r\n            type='number'\r\n            value={data.birthYear}\r\n            min={1900}\r\n            max={new Date().getFullYear()}\r\n            name='birthYear'\r\n            onChange={handleChange}\r\n            error={errors.birthYear}\r\n          />\r\n          <TextField\r\n            label='Портфолио'\r\n            value={data.portfolioUrl}\r\n            placeholder='https://portfolio.ru'\r\n            name='portfolioUrl'\r\n            onChange={handleChange}\r\n            error={errors.portfolioUrl}\r\n          />\r\n          <div className='btn-group'>\r\n            <button className='btn btn-primary mx-2' onClick={handleGoHome}>\r\n              Назад\r\n            </button>\r\n            <button className='btn btn-primary' type='submit' onClick={handleSubmit} disabled={!isValid}>\r\n              {getStorageData('student') ? 'Обновить' : 'Создать'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export default function validator(data, config) {\r\n  const errors = {};\r\n\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired':\r\n        statusValidate = String(data).trim() === '';\r\n        break;\r\n      case 'isUrl':\r\n        {\r\n          const urlRegExp =\r\n            /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\\\+.~#?&//=]*)/gm;\r\n          statusValidate = !urlRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isValidYear': {\r\n        statusValidate = data < 1900 || data > new Date().getFullYear();\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n","export default function getAge(birthYear) {\r\n  const date = new Date();\r\n  const currentYear = date.getFullYear();\r\n  const age = currentYear - birthYear;\r\n  const declensionsAge = ['год', 'года', 'лет'];\r\n\r\n  function formatAgeDeclensions(age, declensions) {\r\n    age = Math.abs(age) % 100;\r\n    const n1 = age % 10;\r\n    if (age > 10 && age < 20) {\r\n      return declensions[2];\r\n    }\r\n    if (n1 > 1 && n1 < 5) {\r\n      return declensions[1];\r\n    }\r\n    if (n1 === 1) {\r\n      return declensions[0];\r\n    }\r\n    return declensions[2];\r\n  }\r\n\r\n  return `${birthYear} (${age} ${formatAgeDeclensions(age, declensionsAge)})`;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getAge from '../utils/getAge';\r\n\r\nconst StudentCard = ({ student }) => {\r\n  const { firstName, secondName, birthYear, portfolioUrl } = student;\r\n  return (\r\n    <div style={{ marginBottom: 10 }}>\r\n      <h1>Карточка студента</h1>\r\n      <div>\r\n        <strong>Имя: </strong>\r\n        {firstName}\r\n      </div>\r\n      <div>\r\n        <strong>Фамилия: </strong> {secondName}\r\n      </div>\r\n      <div>\r\n        <strong>Год Рождения: </strong> {getAge(birthYear)}\r\n      </div>\r\n      <div>\r\n        <strong>Портфолио: </strong>{' '}\r\n        <a href={portfolioUrl} target='_blank' rel='noreferrer'>\r\n          {portfolioUrl}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStudentCard.propTypes = {\r\n  student: PropTypes.object,\r\n};\r\n\r\nexport default StudentCard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StudentCard from '../components/studentCard';\r\nimport { getStorageData } from '../utils/storage';\r\n\r\nconst Main = () => {\r\n  const data = getStorageData('student');\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <StudentCard student={data} />\r\n      ) : (\r\n        <>\r\n          <h1>Карточка студента</h1>\r\n          <h5 className='m-5'>Нет данных</h5>\r\n        </>\r\n      )}\r\n      <Link to='/student'>\r\n        <button className='btn btn-primary' type='button'>\r\n          {data ? 'Редактировать' : 'Добавить'}\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Form from './layouts/form';\nimport Main from './layouts/main';\n\nfunction App() {\n  return (\n    <>\n      <div className='container'>\n        <div\n          style={{\n            height: '100vh',\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Switch>\n            <Route path='/student' component={Form} />\n            <Route path='/' component={Main} />\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}